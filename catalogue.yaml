- name: install catalogue components
  hosts: catalogue
  become: yes
  tasks:
  - name: Setup NodeJS repos. Vendor is providing a script to setup the repos.
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: check roboshop user exits or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true

  - when: out.rc != 0
    name: create user roboshop
    become: yes # we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop

  - name: check /app directory exits or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: check /app directory exits or not
    ansible.builtin.debug:
      msg: "output: {{directory}}"
  
  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue artifact
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
    
  - name: extract catalogue or unarchive the zip file
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  - name: install dependency
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: deman reload
    ansible.builtin.systemd:
      daemon_reload: true
  
  - name: install mongodb
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: load catalogue date
    ansible.builtin.command: mongo --host mongodb.vishwadevops.online </app/schema/catalogue.js

  - name: restart catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: true 